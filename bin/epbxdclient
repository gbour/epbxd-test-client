#!/usr/bin/env python
# -*- coding: utf8 -*-

import re
import yaml
import optparse
import asyncore
from   sip import Account, Manager, Repl
from sip.account import Server

if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option('-c', '--config', dest='config_file', default='/etc/epbxdclient.cfg',
        metavar='CONFIG-FILE', help='Configuration file')

    (opts, args) = parser.parse_args()
    config = yaml.load(file(opts.config_file, 'rb').read())

    mngr = Manager()
    mngr.repl = Repl(mngr.handle)

    #sip.REPL = sip.Repl()
    #sips = sip.SipServer(repl)
    for name, params in config['accounts'].iteritems():
        m = re.match("^(?P<transport>.*)://(?P<host>.*):(?P<port>\d+)$",
                     params['registrar'])
        if m is None:
            print 'Invalid configuration for %s' % name; continue
        m = m.groupdict()

        acc = Account(str(name),
            registrar = Server(m['transport'], m['host'], int(m['port'])),
            proxy     = Server(m['transport'], m['host'], int(m['port']))
        )
        mngr.add_account(acc)

        mngr.repl.echo("Account %s listening on %d port (%s)" %\
                      (acc.username, acc.sips.portnum(), acc.registrar.transport))
    mngr.repl.flush()

    while True:
        try:
            #Â interrupt each 10 ms
            asyncore.loop(timeout=.01, count=1)
            mngr.scheduler()

        except KeyboardInterrupt:
            break

    print '\nend...'
    mngr.repl.cleanup()

